'''
Created on Jan 19, 2016

@author: Fereydoun
'''

class iterators:
    def __init__(self, l):
        self.l = l

    def __iter__(self):
        return reverse_iter(self.l)

class reverse_iter():
    def __init__(self,l):
        self.l = l
        self.i = len(self.l)-1
        self.rl = []
    def __iter__(self):
        return self
    
    def next(self):
        if self.i >= 0:
            i = self.i
            self.i -= 1
#             self.rl.append(self.l[i])
            return self.l[i] 
        else:
            raise StopIteration()
        '''
        Constructor
       '''
class zrange:
    def __init__(self, n):
        self.n = n

    def __iter__(self):
        return zrange_iter(self.n)

class zrange_iter:
    def __init__(self, n):
        self.i = 0
        self.n = n

    def __iter__(self):
        # Iterators are iterables too.
        # Adding this functions to make them so.
        return self

    def next(self):
        if self.i < self.n:
            i = self.i
            self.i += 1
            return i
        else:
            raise StopIteration()

def readfile(*filenames):
    for fil in filenames:
        with open(fil)as f:
            for line in f:
                yield line

def catchlines(lines):
    return(line for line in lines if len(line) <= 40) 

def printlines(lines):
    for line in lines:
        print line

def main(**filenames):
    lines = readfile(filenames)
    lines = catchlines(lines)
    printlines(lines)               
        
if __name__ == '__main__':
    l = [1,2,4,3,5,3,6,7,3]
    it = reverse_iter(l)
    lr = iterators(l)
#     for i in range(len(l)):
#         print it.next()  
    print list(lr)   
    z = zrange(5)
    print list(z)
    print list(lr)
    print list
    print list(it)
    print list(it)
    main("C:\Users\Fereydoun\workspace\projpy\src\infile.txt")
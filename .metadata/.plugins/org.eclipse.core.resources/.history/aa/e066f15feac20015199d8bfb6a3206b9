'''
Created on Jan 24, 2016

@author: Fereydoun
'''
import time
import random

from common.strsearch import ln
l = [2,1,4,3,5,6,4]
x = iter(l)
# print x
nl = []
for i in range(len(l)):
    nl.append(x.next())
#     print nl[::-1]
    ln = nl[::-1]

class zrange_iter():
    def __init__(self, n):
        self.n = n
        self.i = 0
    
    def __iter__(self):
        return self;

    def next(self):
        if self.i < self.n:
            i = self.i
            self.i += 1
            return i
        else:
            raise StopIteration()
class zrange:
    def __init__(self, n):
        self.n = n
    def __iter__(self):
        return zrange_iter(self.n)
'''
    generators 
'''
def yrange(n):
    i = 0
    while i < n: 
        yield i 
        i += 1  
# Generator Expressions ...
a = (x**2 for x in range(100) if x%2 != 0) 

if __name__ == '__main__':
#     print nl, ln
#     print zip(ln,nl)
#     z = zrange(5)
#     print list(z)
#     zz = zrange_iter(7)
#     print list(zz)
#     print list(z)
#     print list(zz)
    y = yrange(10)
    li = list(y)
    print li
    print sum(li)
    s = 0
    print y
    for i in li:
        time.sleep(0.5)
        s += i
        print "Here is the total after >>>:", i, "....", "Total = ", s, "after adding: ", i
        time.sleep(0.1)
#     for n in range(len(list(y))):
#         print n
#         print y.next()
print sum(a)

b = reversed(list(a))
for i in b:
    print b


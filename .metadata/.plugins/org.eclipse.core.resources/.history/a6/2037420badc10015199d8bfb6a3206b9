'''
Created on Jan 22, 2016

@author: Fereydoun
'''
import threading
import time
import logging

logging.basicConfig(level=logging.DEBUG, format='[%(levelname)s] (%(threadName)-10s)%(message)s',)

def worker(n):
    """ Thread worker function ..."""
    print "worker number:", n
    return
def worker1():
    print threading.currentThread().getName(), 'starting'
    time.sleep(2)
    print threading.currentThread().getName(), 'Exiting'
def my_service():
    print threading.currentThread().getName(), 'Starting'
    time.sleep(3)
    print threading.currentThread().getName(), 'Exiting'
def worker2():
    logging.debug('starting') 
    time.sleep(2)
    logging.debug('Ending')
def my_service2():
    logging.debug('starting')
    time.sleep(3)
    logging.debug('Exiting') 

def daemon():
    logging.debug('Starting')
    time.sleep(2)
    logging.debug('Exiting')
d = threading.Thread(name='daemon', target=daemon)
d.setDaemon(True)

def non_deamon():
    logging.debug('Starting')
    logging.debug('Exiting')
t = threading.Thread(name='non_deamon', target=non_deamon)
d.start()
t.start()  
d.join()
t.join()

# t = threading.Thread(name='my_service2',target=my_service2)
# w = threading.Thread(name='worker2',target=worker2)
# w2 =threading.Thread(target=worker2)
# w.start()
# w2.start()
# t.start()





# threads = []
# for i in range(5):
#     t = threading.Thread(target=worker, args=(i,))
#     threads.append(t)
#     t.start()
